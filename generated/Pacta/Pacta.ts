// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt,
  CallResult
} from "@graphprotocol/graph-ts";

export class newAssociation extends EthereumEvent {
  get params(): newAssociation__Params {
    return new newAssociation__Params(this);
  }
}

export class newAssociation__Params {
  _event: newAssociation;

  constructor(event: newAssociation) {
    this._event = event;
  }

  get name(): string {
    return this._event.parameters[0].value.toString();
  }

  get association(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get implementation(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get data(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class feePaid extends EthereumEvent {
  get params(): feePaid__Params {
    return new feePaid__Params(this);
  }
}

export class feePaid__Params {
  _event: feePaid;

  constructor(event: feePaid) {
    this._event = event;
  }

  get to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ownedPaymentReceived extends EthereumEvent {
  get params(): ownedPaymentReceived__Params {
    return new ownedPaymentReceived__Params(this);
  }
}

export class ownedPaymentReceived__Params {
  _event: ownedPaymentReceived;

  constructor(event: ownedPaymentReceived) {
    this._event = event;
  }

  get receiver(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ownedFallback extends EthereumEvent {
  get params(): ownedFallback__Params {
    return new ownedFallback__Params(this);
  }
}

export class ownedFallback__Params {
  _event: ownedFallback;

  constructor(event: ownedFallback) {
    this._event = event;
  }

  get receiver(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Pacta extends SmartContract {
  static bind(address: Address): Pacta {
    return new Pacta("Pacta", address);
  }

  creationDate(): BigInt {
    let result = super.call("creationDate", []);

    return result[0].toBigInt();
  }

  try_creationDate(): CallResult<BigInt> {
    let result = super.tryCall("creationDate", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  version(): BigInt {
    let result = super.call("version", []);

    return result[0].toBigInt();
  }

  try_version(): CallResult<BigInt> {
    let result = super.tryCall("version", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  associations(param0: BigInt): Address {
    let result = super.call("associations", [
      EthereumValue.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_associations(param0: BigInt): CallResult<Address> {
    let result = super.tryCall("associations", [
      EthereumValue.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  getAssociations(): Array<Address> {
    let result = super.call("getAssociations", []);

    return result[0].toAddressArray();
  }

  try_getAssociations(): CallResult<Array<Address>> {
    let result = super.tryCall("getAssociations", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddressArray());
  }

  getAssociationOwner(i: BigInt): Address {
    let result = super.call("getAssociationOwner", [
      EthereumValue.fromUnsignedBigInt(i)
    ]);

    return result[0].toAddress();
  }

  try_getAssociationOwner(i: BigInt): CallResult<Address> {
    let result = super.tryCall("getAssociationOwner", [
      EthereumValue.fromUnsignedBigInt(i)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  manager(): boolean {
    let result = super.call("manager", []);

    return result[0].toBoolean();
  }

  try_manager(): CallResult<boolean> {
    let result = super.tryCall("manager", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  migrateAssociations(newOwner: Address): BigInt {
    let result = super.call("migrateAssociations", [
      EthereumValue.fromAddress(newOwner)
    ]);

    return result[0].toBigInt();
  }

  try_migrateAssociations(newOwner: Address): CallResult<BigInt> {
    let result = super.tryCall("migrateAssociations", [
      EthereumValue.fromAddress(newOwner)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  getBeneficiaries(): Array<Address> {
    let result = super.call("getBeneficiaries", []);

    return result[0].toAddressArray();
  }

  try_getBeneficiaries(): CallResult<Array<Address>> {
    let result = super.tryCall("getBeneficiaries", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddressArray());
  }

  getOwner(): Address {
    let result = super.call("getOwner", []);

    return result[0].toAddress();
  }

  try_getOwner(): CallResult<Address> {
    let result = super.tryCall("getOwner", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }
}

export class ChangeOwnerCall extends EthereumCall {
  get inputs(): ChangeOwnerCall__Inputs {
    return new ChangeOwnerCall__Inputs(this);
  }

  get outputs(): ChangeOwnerCall__Outputs {
    return new ChangeOwnerCall__Outputs(this);
  }
}

export class ChangeOwnerCall__Inputs {
  _call: ChangeOwnerCall;

  constructor(call: ChangeOwnerCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeOwnerCall__Outputs {
  _call: ChangeOwnerCall;

  constructor(call: ChangeOwnerCall) {
    this._call = call;
  }
}

export class ConstructorCall extends EthereumCall {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get impl(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get dataFactory(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get o(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }

  get a(): Array<Address> {
    return this._call.inputValues[3].value.toAddressArray();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends EthereumCall {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DeployCall extends EthereumCall {
  get inputs(): DeployCall__Inputs {
    return new DeployCall__Inputs(this);
  }

  get outputs(): DeployCall__Outputs {
    return new DeployCall__Outputs(this);
  }
}

export class DeployCall__Inputs {
  _call: DeployCall;

  constructor(call: DeployCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get purpose(): string {
    return this._call.inputValues[1].value.toString();
  }

  get subscription(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get token(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get hide(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }
}

export class DeployCall__Outputs {
  _call: DeployCall;

  constructor(call: DeployCall) {
    this._call = call;
  }
}

export class MigrateAssociationsCall extends EthereumCall {
  get inputs(): MigrateAssociationsCall__Inputs {
    return new MigrateAssociationsCall__Inputs(this);
  }

  get outputs(): MigrateAssociationsCall__Outputs {
    return new MigrateAssociationsCall__Outputs(this);
  }
}

export class MigrateAssociationsCall__Inputs {
  _call: MigrateAssociationsCall;

  constructor(call: MigrateAssociationsCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class MigrateAssociationsCall__Outputs {
  _call: MigrateAssociationsCall;

  constructor(call: MigrateAssociationsCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class WithdrawCall extends EthereumCall {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class DestroyCall extends EthereumCall {
  get inputs(): DestroyCall__Inputs {
    return new DestroyCall__Inputs(this);
  }

  get outputs(): DestroyCall__Outputs {
    return new DestroyCall__Outputs(this);
  }
}

export class DestroyCall__Inputs {
  _call: DestroyCall;

  constructor(call: DestroyCall) {
    this._call = call;
  }
}

export class DestroyCall__Outputs {
  _call: DestroyCall;

  constructor(call: DestroyCall) {
    this._call = call;
  }
}

export class SetVotingMinTimeCall extends EthereumCall {
  get inputs(): SetVotingMinTimeCall__Inputs {
    return new SetVotingMinTimeCall__Inputs(this);
  }

  get outputs(): SetVotingMinTimeCall__Outputs {
    return new SetVotingMinTimeCall__Outputs(this);
  }
}

export class SetVotingMinTimeCall__Inputs {
  _call: SetVotingMinTimeCall;

  constructor(call: SetVotingMinTimeCall) {
    this._call = call;
  }

  get a(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get newTime(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetVotingMinTimeCall__Outputs {
  _call: SetVotingMinTimeCall;

  constructor(call: SetVotingMinTimeCall) {
    this._call = call;
  }
}
